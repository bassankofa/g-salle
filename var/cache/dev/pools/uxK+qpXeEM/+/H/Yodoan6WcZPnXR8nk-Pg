<?php //%255BApp%255CEntity%255CRoom%2524picture%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        clone ($p['Symfony\\Component\\Validator\\Constraints\\Image'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Image')),
    ],
    null,
    [
        'stdClass' => [
            'length' => [
                255,
            ],
            'message' => [
                1 => 'Vous devez ajouter une image.',
            ],
            'groups' => [
                1 => [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
            'mimeTypesMessage' => [
                2 => 'VÃ©rifiez le format de votre image',
            ],
            'binaryFormat' => [
                2 => false,
            ],
            'maxSizeMessage' => [
                2 => 'Attention, votre image est trop lourde.',
            ],
        ],
        'Symfony\\Component\\Validator\\Constraints\\File' => [
            'maxSize' => [
                2 => 1000000,
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
    ],
    []
); }];
